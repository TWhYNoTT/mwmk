    @model IEnumerable<Product>

    @{
        ViewData["Title"] = "Home Page";
    }

@section Styles {
    <link href="@Url.Content("~/css/css/shop.css")" rel="stylesheet" />

}
    <form asp-action="Home" method="get" id="filter-form">
    <!-- Filter Section -->
    <div class="container mx-auto p-6">
        <div class="bg-white p-4 shadow-lg rounded-md">
            <div class="flex items-center justify-center mb-4">
                <i class="fas fa-filter mr-2 text-black"></i> <!-- Filter Icon -->
                <h2 class="text-black font-bold text-xl">Filter Products</h2>
            </div>
            <div class="flex flex-wrap lg:flex-nowrap gap-4">
                <input type="text" placeholder="Search products" class="flex-1 border border-gray-300 p-2 rounded text-black focus:outline-none focus:border-black">

                <select class="flex-1 border border-black-300 p-2 rounded text-black focus:outline-none focus:border-black">
                    <option value="">Category</option>
                    <option value="">All Categories</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <option value="@category" selected="@(category == ViewBag.CurrentCategory)">@category</option>
                    }
                </select>

                <input type="number" placeholder="Min Price" value="@ViewBag.MinPrice" class="flex-1 border border-gray-300 p-2 rounded text-black focus:outline-none focus:border-black">

                <input type="number" placeholder="Max Price" value="@ViewBag.MaxPrice" class="flex-1 border border-gray-300 p-2 rounded text-black focus:outline-none focus:border-black">

                <select class="flex-1 border border-gray-300 p-2 rounded text-black focus:outline-none focus:border-black">
                    <option value="">Sort By</option>
                    <option value="best-seller" selected="@(ViewBag.SortBy == "best-seller")">Best Seller</option>
                    <option value="price_asc" selected="@(ViewBag.SortBy == "price_asc")">Cheapest Price</option>
                    <option value="new_Arr" selected="@(ViewBag.SortBy == "new_Arr")">New Arrivals</option>
                    <option value="discount_Prod" selected="@(ViewBag.SortBy == "discount_Prod")">Discounted Products</option>
                </select>

                <button class="bg-black text-white px-4 py-2 rounded hover:bg-white hover:text-black border border-black transition duration-200">Filter products</button>
            </div>
        </div>
    </div>

    </form>



<div class="product-list">
    @foreach (var product in Model)
    {
            <div class="product-card">
                  <a href="@Url.Action("Details", "Home", new { area = "Customer", ProductID = product.Id })">
       
            <img src="~/@(string.IsNullOrEmpty(product.img[0]) ? $"https://via.placeholder.com/400x300/f39c12/ffffff?text={product.Name}" : product.img[0])" alt="@product.Name">
           <div class="cart-icon"><button  class="cart-bt2"onclick="addToCart(@product.Id)"><i class="fa-solid fa-cart-plus"></i></button></div>
               <div class="love" onclick="toggleFavorite(@product.Id)">
                    <i class="@(ViewBag.favourite_products.Contains(product.Id) ? " fa-solid fa-heart"
                    : "fa-regular fa-heart" ) heart"></i>
                </div>
                @if (product.Discount>0)
                {
                    <div class="overlay-box">
                        <p style=" color:white; text-align: center;">Sale(@product.Discount)%</p>
                    </div>

                }
                @if (ViewBag.AppearRateAndReview)
                {
                    <div class="star-rate2">
                        <span class="star">&#9733;</span>
                        <p>(@ViewBag.AverageRatings[product.Id].ToString("F1"))</p>
                    </div>
                }
                <p>@product.Name</p>
                @if (ViewBag.IsMarketer)
                {
                    <p class="profit">Your profit : @product.CommissionRate </p>
                }
                @if (product.Discount>0)
                {

                    <p class="price">
                        <del>@product.Price EGP</del>
                        @(product.Price - (product.Price * (product.Discount / 100)))EGP
                    </p>
                }
                else
                {
                    <p class="price">
                        @product.Price EGP
                    </p>
                }
        </a>
    </div>



    }
</div>
            


        <div id="loading-spinner" class="text-center d-none">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

   

    @section Scripts {
        
        
        <script>
            $(document).ready(function () {
                let currentPage = @ViewBag.CurrentPage;
                let loading = false;
                let noMoreProducts = false;

                function loadMoreProducts() {
                    if (loading || noMoreProducts) return;
                    loading = true;

                    $('#loading-spinner').removeClass('d-none');

                    currentPage++;
                    var url = '@Url.Action("Home", "Home", new { area = "Customer" })' +
                        '?page=' + currentPage +
                        '&categoryName=@ViewBag.CurrentCategory' +
                        '&searchTerm=@ViewBag.SearchTerm' +
                        '&minPrice=@ViewBag.MinPrice' +
                        '&maxPrice=@ViewBag.MaxPrice' +
                        '&sortBy=@ViewBag.SortBy';

                    $.get(url, function (data) {
                        var $data = $(data);
                        var $newProducts = $data.find('#product-list').children();

                        if ($newProducts.length > 0) {
                            $('#product-list').append($newProducts);
                        } else {
                            noMoreProducts = true;
                        }

                        loading = false;
                        $('#loading-spinner').addClass('d-none');
                    });
                }

           
           

                $(window).scroll(function () {
                    if (!noMoreProducts && $(window).scrollTop() + $(window).height() > $(document).height() - 200) {
                        loadMoreProducts();
                    }
                });

            function toggleFavorite(productId) {
                // Perform an AJAX call to toggle the favorite status
                $.ajax({
                    url: '/Customer/Home/ToggleFavorite', // Make sure this matches your controller route
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        // Toggle the heart icon based on the response
                        var heartIcon = $("button[onclick='toggleFavorite(" + productId + ")'] i");
                        if (heartIcon.hasClass("fa-regular")) {
                            heartIcon.removeClass("fa-regular fa-heart").addClass("fa-solid fa-heart");
                        } else {
                            heartIcon.removeClass("fa-solid fa-heart").addClass("fa-regular fa-heart");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error toggling favorite:", error);
                    }
                });
              }
                
            });

        function addToCart(productId) {
            $.ajax({
                url: '@Url.Action("AddToCart", "Home")',  // The URL for the AddToCart action
                type: 'POST',  // POST method
                data: {
                    productId: productId,
                    quantity: 1  // Set default quantity to 1 (you can modify this if needed)
                },
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message, 'Success');
                        updateFloatingCart();
                    } else {
                        toastr.error(response.message, 'Error');
                    }
                },
                error: function () {
                    toastr.error("An error occurred while adding the product to the cart.", 'Error');
                }
            });
        }

        </script>
    }
    